CREATE OR REPLACE TRIGGER BD_2.COUNTRY_ID_T
BEFORE INSERT ON BD_2.COUNTRY
FOR EACH ROW
    WHEN (NEW.Id is NULL)
BEGIN
    :NEW.Id := COUNTRY_ID_SEQ.NEXTVAL;
END;
/
CREATE OR REPLACE TRIGGER BD_2.CITY_ID_T
BEFORE INSERT ON BD_2.CITY
FOR EACH ROW
    WHEN (NEW.Id is NULL)
BEGIN
    :NEW.Id := CITY_ID_SEQ.NEXTVAL;
END;
/
CREATE OR REPLACE TRIGGER BD_2.POSTAL_CODE_ID_T
BEFORE INSERT ON BD_2.POSTAL_CODE
FOR EACH ROW
    WHEN (NEW.Id is NULL)
BEGIN
    :NEW.Id := POSTAL_CODE_ID_SEQ.NEXTVAL;
END;
/
CREATE OR REPLACE TRIGGER BD_2.ADDRESS_ID_T
BEFORE INSERT ON BD_2.ADDRESS
FOR EACH ROW
    WHEN (NEW.Id is NULL)
BEGIN
    :NEW.Id := ADDRESS_ID_SEQ.NEXTVAL;
END;
/
CREATE OR REPLACE TRIGGER BD_2.PERSON_ID_T
BEFORE INSERT ON BD_2.Person
FOR EACH ROW
    WHEN (NEW.Id is NULL)
BEGIN
    :NEW.Id := PERSON_ID_SEQ.NEXTVAL;
END;
/
CREATE OR REPLACE TRIGGER BD_2.PHONE_ID_T
BEFORE INSERT ON BD_2.PHONE
FOR EACH ROW
    WHEN (NEW.Id is NULL)
BEGIN
    :NEW.Id := PHONE_ID_SEQ.NEXTVAL;
END;
/
CREATE OR REPLACE TRIGGER BD_2.ROLE_T_ID_T
BEFORE INSERT ON BD_2.ROLE_T
FOR EACH ROW
    WHEN (NEW.Id is NULL)
BEGIN
    :NEW.Id := ROLE_T_ID_SEQ.NEXTVAL;
END;
/
CREATE OR REPLACE TRIGGER BD_2.COLOR_ID_T
BEFORE INSERT ON BD_2.COLOR
FOR EACH ROW
    WHEN (NEW.Id is NULL)
BEGIN
    :NEW.Id := COLOR_ID_SEQ.NEXTVAL;
END;
/
CREATE OR REPLACE TRIGGER BD_2.PRODUCER_ID_T
BEFORE INSERT ON BD_2.PRODUCER
FOR EACH ROW
    WHEN (NEW.Id is NULL)
BEGIN
    :NEW.Id := PRODUCER_ID_SEQ.NEXTVAL;
END;
/
CREATE OR REPLACE TRIGGER BD_2.PRODUCT_CATEGORY_ID_T
BEFORE INSERT ON BD_2.PRODUCT_CATEGORY
FOR EACH ROW
    WHEN (NEW.Id is NULL)
BEGIN
    :NEW.Id := PRODUCT_CATEGORY_ID_SEQ.NEXTVAL;
END;
/
CREATE OR REPLACE TRIGGER BD_2.ABSTRACT_PRODUCT_ID_T
BEFORE INSERT ON BD_2.ABSTRACT_PRODUCT
FOR EACH ROW
    WHEN (NEW.Id is NULL)
BEGIN
    :NEW.Id := ABSTRACT_PRODUCT_ID_SEQ.NEXTVAL;
END;
/
CREATE OR REPLACE TRIGGER BD_2.PRODUCT_SPECIMEN_T
BEFORE INSERT ON BD_2.PRODUCT_SPECIMEN
FOR EACH ROW
    WHEN (NEW.Id is NULL)
BEGIN
    :NEW.Id := PRODUCT_SPECIMEN_ID_SEQ.NEXTVAL;
END;
/
CREATE OR REPLACE TRIGGER BD_2.TRANSACTION_T_ID_SEQ
BEFORE INSERT ON BD_2.TRANSACTION_T
FOR EACH ROW
    WHEN (NEW.Id is NULL)
BEGIN
    :NEW.Id := TRANSACTION_T_ID_SEQ.NEXTVAL;
END;
/
CREATE OR REPLACE TRIGGER BD_2.PROMOTION_ID_T
BEFORE INSERT ON BD_2.PROMOTION
FOR EACH ROW
    WHEN (NEW.Id is NULL)
BEGIN
    :NEW.Id := PROMOTION_ID_SEQ.NEXTVAL;
END;
/
CREATE OR REPLACE TRIGGER UPDATE_PRODUCT
    AFTER INSERT ON BD_2.ORDERED_PRODUCTS
    FOR EACH ROW
BEGIN
    UPDATE BD_2.PRODUCT_SPECIMEN p
    SET p.QUANTITY = p.QUANTITY - :new.QUANTITY;
END;
/
CREATE OR REPLACE TRIGGER INSERT_PROMOTION
    BEFORE INSERT ON BD_2.PROMOTION
    FOR EACH ROW
BEGIN
    IF(:new.PRODUCT_CATEGORY_ID IS NULL AND 
	   :new.ABSTRACT_PRODUCT_ID IS NULL AND 
	   :new.PRODUCT_SPECIMEN_ID IS NULL)
	THEN
		 RAISE_APPLICATION_ERROR( -20000, 'Promocja musi mieć kategorię' );
	END IF;
END;






